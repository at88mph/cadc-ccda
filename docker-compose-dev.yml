version: '3.7'
services:
    proxy:
        image: traefik:v2.5
        ports:
            - 80:80
            # - 443:443
            - 8080:8080
        command:
            - "--log.level=DEBUG"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            # - "--entrypoints.websecure.address=:443"
            # - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
            # - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
            # - "--certificatesresolvers.kawfeeresolver.acme.httpchallenge=true"
            # - "--certificatesresolvers.kawfeeresolver.acme.httpchallenge.entrypoint=web"
            # - "--certificatesresolvers.kawfeeresolver.acme.email=cyclodaddy@gmail.com"
            # - "--certificatesresolvers.kawfeeresolver.acme.storage=/letsencrypt/acme.json"
        volumes:
            - "proxy:/letsencrypt:rw"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        depends_on: 
            - "jekyll"
        networks:
            - "jekyll"
    jekyll:
        image: jekyll/jekyll:4
        command: jekyll serve 0.0.0.0
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.jekyll.loadbalancer.server.port=4000"
            - "traefik.http.routers.jekyll.rule=PathPrefix(`/`)"
            - "traefik.http.routers.jekyll.entrypoints=web"
            # - "traefik.http.routers.jekyll.entrypoints=websecure"
            # - "traefik.http.routers.jekyll.tls.certresolver=kawfeeresolver"
            - "traefik.http.routers.jekyll.service=jekyll"
        volumes:
            - "/home/debian/src/jekyll:/srv/jekyll"
        networks:
            - "jekyll"
    resolver:
        image: tomcat:9-jdk11-openjdk-slim
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.resolver.loadbalancer.server.port=8080"
            - "traefik.http.routers.resolver.rule=PathPrefix(`/cadc-target-resolver`)"
            - "traefik.http.routers.resolver.service=resolver"
            - "traefik.http.routers.resolver.entrypoints=web"
            # - "traefik.http.routers.wet.entrypoints=websecure"
            # - "traefik.http.routers.wet.tls.certresolver=kawfeeresolver"
        volumes:
            - "/home/debian/src/resolver/webapps:/usr/local/tomcat/webapps"
        networks:
            - "jekyll"
    tap:
        image: nginx:alpine
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.tap.loadbalancer.server.port=80"
            - "traefik.http.routers.tap.rule=(PathPrefix(`/tap`) || Path(`/argus/capabilities`))"
            - "traefik.http.routers.tap.service=tap"
            - "traefik.http.routers.tap.entrypoints=web"
            # - "traefik.http.routers.wet.entrypoints=websecure"
            # - "traefik.http.routers.wet.tls.certresolver=kawfeeresolver"
        volumes:
            - "/home/debian/src/tap/conf:/etc/nginx/conf.d"
            - "/home/debian/src/tap/root:/usr/share/nginx/html"
        networks:
            - "jekyll"
    advancedsearch:
        image: tomcat:9-jdk11-openjdk-slim
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.advancedsearch.loadbalancer.server.port=8080"
            - "traefik.http.routers.advancedsearch.rule=PathPrefix(`/AdvancedSearch`)"
            - "traefik.http.routers.advancedsearch.service=advancedsearch"
            - "traefik.http.routers.advancedsearch.entrypoints=web"
            # - "traefik.http.routers.wet.entrypoints=websecure"
            # - "traefik.http.routers.wet.tls.certresolver=kawfeeresolver"
        volumes:
            - "/home/debian/src/advancedsearch/webapps:/usr/local/tomcat/webapps"
            - "/home/debian/src/advancedsearch/config:/root/config"
        ports:
            - 30002:5555
        environment:
            CATALINA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5555 -Djava.security.egd=file:/dev/./urandom -Dadvancedsearch.uws.maxActive=2 -Dadvancedsearch.uws.username=asuws -Dadvancedsearch.uws.password=asuwspw -Dadvancedsearch.uws.url=jdbc:postgresql://aspg/uws -Dca.nrc.cadc.reg.client.RegistryClient.host=kawfee.ca"
        networks:
            - "jekyll"
    aspg:
        image: opencadc/uws-postgres:13-alpine
        networks:
            - "jekyll"
        environment:
          POSTGRES_USER: asuws
          POSTGRES_PASSWORD: asuwspw
          POSTGRES_DB: uws

    meetings:
        image: tomcat:9-jdk11-openjdk-slim
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.meetings.loadbalancer.server.port=8080"
            - "traefik.http.routers.meetings.rule=PathPrefix(`/meetings`)"
            - "traefik.http.routers.meetings.service=meetings"
            - "traefik.http.routers.meetings.entrypoints=web"
            # - "traefik.http.routers.meetings.entrypoints=websecure"
            # - "traefik.http.routers.meetings.tls=true"
            # - "traefik.http.routers.meetings.tls.domains[0].main=cadc.dao.nrc.ca"
            # - "traefik.http.routers.meetings.tls.domains[0].sans=*.cadc.dao.nrc.ca"
        networks:
            - "jekyll"
        ports:
            - 30001:5555
        depends_on:
            - "meetingsdb"
        volumes:
            - "/home/debian/src/meetings:/usr/local/tomcat/webapps"
        environment: 
            CATALINA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5555 -Dmail.smtp.host=smtp.gmail.com -Djava.security.egd=file:/dev/./urandom -Dmeetings.username=meetingsuser -Dmeetings.password=meetingspass -Dmeetings.url=jdbc:postgresql://meetingsdb/cadcmisc -Dmeetings.maxActive=2"

    meetingsdb:
        image: postgres:13-alpine
        networks:
            - "jekyll"
        volumes:
            - meetingsdb:/var/lib/postgresql/data/cadcmisc
            - meetingsdb_init:/docker-entrypoint-initdb.d:ro
        environment:
            POSTGRES_USER: meetingsuser
            POSTGRES_PASSWORD: meetingspass
            POSTGRES_DB: cadcmisc
            PGDATA: /var/lib/postgresql/data/cadcmisc

networks:
    jekyll:
        external: true

volumes:
    proxy:
        external: true
    meetingsdb:
        external: true
    meetingsdb_init:
        external: true